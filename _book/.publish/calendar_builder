#
#
#This is a calender builder for NCBI-style hackathons.  Enter your desired start date and you will receive a calendar with prep tasks. 
#
#

library(shiny)
library(googleAuthR)

options(c(googleAuthR.scopes.selected = "https://www.googleapis.com/auth/drive", googleAnalyticsR.webapp.client_id = "REDACTED", googleAnalyticsR.webapp.client_secret = "REDACTED"))

# Define UI 
ui <- fluidPage(
  
  # Application title
  titlePanel("NCBI-Style Hackathon Calendar Builder"),
  
  # Sidebar with calendar input
  sidebarLayout(
    sidebarPanel(dateInput(
      'date',
      label = 'Select the first day for your hackathon.',
      value = NULL,
      min= Sys.Date()
    ),
    googleAuthUI("gauth_login"),
    actionButton("goButton", "Create my hackathon!"),
    textOutput("create")
    ),
    
    # Display the calendar
    mainPanel(
      tags$h4(textOutput("dateText")),
      DT::dataTableOutput('tbl')
    )
  )
)


server <- function(input, output, session) {
  
  #First we need to get the user logged in so we can create things in their Google Drive.
  ## Create access token and render login button
  
  
  #print the start date of the hackathon
  output$dateText <- renderText({
    paste("You have selected", as.character(input$date), "as the start date for your hackathon.", "\n")
  })
  
  #create the data frame with the calendar  
  Data = reactive({
    if (input$date > 0) {
      r1 <- c(as.character(input$date - 60), "Recruit team leads", "Host", "Super damn essential")
      r2 <- c(as.character(input$date - 30), "Select a hackathon mascot", "Host", "Meh whatever")
      r3 <- c(as.character(input$date - 15), "Book a room", "Site organizer", "Super damn essential")
      r4 <- c(as.character(input$date), "Time to Hack!!!", "All the awesome people", "Super damn essential")
      df <- rbind(r1, r2, r3, r4)
      names(df) <- c("Date", "Task", "Person Responsible", "Importance")
      return(list(df=df))
    }
  })
  
  output$tbl = DT::renderDataTable(
    Data()$df, options = list(dom = 't'), rownames = FALSE
  )
  
  #print the waiting message
  
  
  
  #create the google drive folder and populate it
  output$create <- renderText({
    input$goButton
    if (input$goButton > 0) {
      library(googledrive)
      library(googlesheets)
      
      #do the Google authentication
      #this needs to be added!
      
      #make the name for the folder based on the date
      path <- paste("Hackathon_", input$date, sep="")
      folder <- drive_mkdir(path, starred = TRUE)
      calendar <- googlesheets::gs_new("calendar", ws_title = "calendar", input = Data()$df)
      file <- drive_mv("calendar", path = path, name = "Calendar")
      template <- drive_cp(file = as_id("https://docs.google.com/document/d/14DycE62xpFncUr5hP-D4hBf3AFirJGh0uAgBRjevnt8/edit"), path = path, name = "Manuscript Template")
      application <- drive_cp(as_id("https://docs.google.com/forms/d/1RaEd70m_2Y4--rPzjTLHpYrT7B8a1nWqpjorLBFUhQU/"), path = path, name = "Application Form")
      print("Your hackathon has been created!")
      #create the sheet that collects the application form data
      roster <- drive_cp(as_id("https://docs.google.com/spreadsheets/d/1oxTEwplhi2BuARmXkG2HFfFRV4wjx23uWumThZdmm0o/edit#gid=1999195006"), path = path, name = "Applicant List")  
      print("Your hackathon has been created!")
    }
  })
}

shinyApp(ui = ui, server = server)
