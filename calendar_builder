#
#
#This is a calender builder for NCBI-style hackathons.  Enter your desired start date and you will receive a calendar with prep tasks. 
#
#

library(shiny)

# Define UI 
ui <- fluidPage(
   
   # Application title
   titlePanel("NCBI-Style Hackathon Calendar Builder"),
   
   # Sidebar with calendar input
   sidebarLayout(
      sidebarPanel(dateInput(
        'date',
        label = 'Select the first day for your hackathon.',
        value = NULL,
        min= Sys.Date()
      ),
      actionButton("goButton", "Create my hackathon!"),
      textOutput("create")
      ),
      
      # Display the calendar
      mainPanel(
        tags$h4(textOutput("dateText")),
        DT::dataTableOutput('tbl')
      )
   )
)

# Create the server that builds the calendar
server <- function(input, output) {

  #print the start date of the hackathon
  output$dateText <- renderText({
    paste("You have selected", as.character(input$date), "as the start date for your hackathon.", "\n")
  })

  #create the data frame with the calendar  
  Data = reactive({
    if (input$date > 0) {
      r1 <- c(as.character(input$date - 60), "Recruit team leads", "Host", "Super damn essential")
      r2 <- c(as.character(input$date - 30), "Task 2", "Other person", "Meh whatever")
      r3 <- c(as.character(input$date - 15), "Task 3", "Other person", "Meh whatever")
      df <- rbind(r1, r2, r3)
      names(df) <- c("Date", "Task", "Person Responsible", "Importance")
      return(list(df=df))
    }
  })
  
  output$tbl = DT::renderDataTable(
    Data()$df, options = list(dom = 't'), rownames = FALSE
  )
  
  #print the waiting message
  
  
  
  #create the google drive folder and populate it
  output$create <- renderText({
    input$goButton
    if (input$goButton > 0) {
      folder <- googledrive::drive_mkdir("Hackathon", starred = TRUE)
      foo <- googlesheets::gs_new("foo", ws_title = "calendar", input = Data()$df)
      file <- drive_mv("foo", path = "Hackathon", name = "Calendar")
      
      print("Your hackathon has been created!")
    }
  })
  
  
  
}

# Run the application 
shinyApp(ui = ui, server = server)

